{"remainingRequest":"/Users/caichaosen/Code/web/hrm-ui2/node_modules/babel-loader/lib/index.js!/Users/caichaosen/Code/web/hrm-ui2/node_modules/eslint-loader/index.js??ref--13-0!/Users/caichaosen/Code/web/hrm-ui2/src/permission.js","dependencies":[{"path":"/Users/caichaosen/Code/web/hrm-ui2/src/permission.js","mtime":1612439265451},{"path":"/Users/caichaosen/Code/web/hrm-ui2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caichaosen/Code/web/hrm-ui2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/caichaosen/Code/web/hrm-ui2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvY2FpY2hhb3Nlbi9Db2RlL3dlYi9ocm0tdWkyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKdmFyIF9yb3V0ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vcm91dGVyIikpOwoKdmFyIF9zdG9yZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9zdG9yZSIpKTsKCnZhciBfZWxlbWVudFVpID0gcmVxdWlyZSgiZWxlbWVudC11aSIpOwoKdmFyIF9ucHJvZ3Jlc3MgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIm5wcm9ncmVzcyIpKTsKCnJlcXVpcmUoIm5wcm9ncmVzcy9ucHJvZ3Jlc3MuY3NzIik7Cgp2YXIgX2F1dGggPSByZXF1aXJlKCJAL3V0aWxzL2F1dGgiKTsKCl9ucHJvZ3Jlc3MuZGVmYXVsdC5jb25maWd1cmUoewogIHNob3dTcGlubmVyOiBmYWxzZQp9KTsKCnZhciB3aGl0ZUxpc3QgPSBbXTsKCl9yb3V0ZXIuZGVmYXVsdC5iZWZvcmVFYWNoKGZ1bmN0aW9uICh0bywgZnJvbSwgbmV4dCkgewogIF9ucHJvZ3Jlc3MuZGVmYXVsdC5zdGFydCgpOwoKICBuZXh0KCk7CiAgcmV0dXJuOyAvLyBpZiAoZ2V0VG9rZW4oKSkgewogIC8vICAgZGVidWdnZXIKICAvLyAgIC8qIGhhcyB0b2tlbiovCiAgLy8gICBpZiAodG8ucGF0aCA9PT0gJy9sb2dpbicpIHsKICAvLyAgICAgbmV4dCh7IHBhdGg6ICcvJyB9KQogIC8vICAgICBOUHJvZ3Jlc3MuZG9uZSgpCiAgLy8gICB9IGVsc2UgewogIC8vICAgICAvLyDmnIl0b2tlbuWwseacieS6hueUqOaIt+S/oeaBrwogIC8vICAgICAvLyAxLuWIpOaWreacieaXoOi3r+eUseS/oeaBr++8jOayoeacieeahOivne+8jOaLieWPlui3r+eUseaVsOaNru+8jOaLieWPluWksei0peebtOaOpeeZu+WHugogIC8vICAgICBzdG9yZS5kaXNwYXRjaCgnR2VuZXJhdGVSb3V0ZXMnKS50aGVuKGFjY2Vzc1JvdXRlcyA9PiB7CiAgLy8gICAgICAgZGVidWdnZXIKICAvLyAgICAgICBjb25zb2xlLmxvZygnYScsIGFjY2Vzc1JvdXRlcykKICAvLyAgICAgICAvLyByb3V0ZXIuYWRkUm91dGVzKGFjY2Vzc1JvdXRlcykgLy8g5Yqo5oCB5re75Yqg5Y+v6K6/6Zeu6Lev55Sx6KGoCiAgLy8gICAgICAgbmV4dCh7IC4uLnRvLCByZXBsYWNlOiB0cnVlIH0pIC8vIGhhY2vmlrnms5Ug56Gu5L+dYWRkUm91dGVz5bey5a6M5oiQCiAgLy8gICAgIH0pLmNhdGNoKGUgPT4gewogIC8vICAgICAgIHN0b3JlLmRpc3BhdGNoKCdMb2dPdXQnKS50aGVuKCgpID0+IHsKICAvLyAgICAgICAgIE1lc3NhZ2UuZXJyb3IoZSkKICAvLyAgICAgICAgIG5leHQoeyBwYXRoOiAnLycgfSkKICAvLyAgICAgICAgIC8vIFRPRE86IOi/memHjOi/mOmcgOimgeWkhOeQhgogIC8vICAgICAgICAgLy8gc3RvcmUuZGlzcGF0Y2goJ0xvZ2luJywgdG8pLnRoZW4ocmVzID0+IHsKICAvLyAgICAgICAgIC8vICAgbmV4dChgL2ApCiAgLy8gICAgICAgICAvLyAgIE5Qcm9ncmVzcy5kb25lKCkKICAvLyAgICAgICAgIC8vIH0pCiAgLy8gICAgICAgfSkKICAvLyAgICAgfSkKICAvLyAgICAgLy8gaWYgKHN0b3JlLmdldHRlcnMucm9sZXMubGVuZ3RoID09PSAwKSB7CiAgLy8gICAgIC8vICAgLy8g5Yik5pat5b2T5YmN55So5oi35piv5ZCm5bey5ouJ5Y+W5a6MdXNlcl9pbmZv5L+h5oGvCiAgLy8gICAgIC8vICAgc3RvcmUuZGlzcGF0Y2goJ0dldEluZm8nKS50aGVuKHJlcyA9PiB7CiAgLy8gICAgIC8vICAgICAvLyDmi4nlj5Z1c2VyX2luZm8KICAvLyAgICAgLy8gICAgIGNvbnN0IHJvbGVzID0gcmVzLnJvbGVzCiAgLy8gICAgIC8vICAgICBzdG9yZS5kaXNwYXRjaCgnR2VuZXJhdGVSb3V0ZXMnLCB7IHJvbGVzIH0pLnRoZW4oYWNjZXNzUm91dGVzID0+IHsKICAvLyAgICAgLy8gICAgICAgLy8g5qC55o2ucm9sZXPmnYPpmZDnlJ/miJDlj6/orr/pl67nmoTot6/nlLHooagKICAvLyAgICAgLy8gICAgICAgcm91dGVyLmFkZFJvdXRlcyhhY2Nlc3NSb3V0ZXMpIC8vIOWKqOaAgea3u+WKoOWPr+iuv+mXrui3r+eUseihqAogIC8vICAgICAvLyAgICAgICBuZXh0KHsgLi4udG8sIHJlcGxhY2U6IHRydWUgfSkgLy8gaGFja+aWueazlSDnoa7kv51hZGRSb3V0ZXPlt7LlrozmiJAKICAvLyAgICAgLy8gICAgIH0pCiAgLy8gICAgIC8vICAgfSkuY2F0Y2goZXJyID0+IHsKICAvLyAgICAgLy8gICAgIHN0b3JlLmRpc3BhdGNoKCdMb2dPdXQnKS50aGVuKCgpID0+IHsKICAvLyAgICAgLy8gICAgICAgTWVzc2FnZS5lcnJvcihlcnIpCiAgLy8gICAgIC8vICAgICAgIG5leHQoeyBwYXRoOiAnLycgfSkKICAvLyAgICAgLy8gICAgIH0pCiAgLy8gICAgIC8vICAgfSkKICAvLyAgICAgLy8gfSBlbHNlIHsKICAvLyAgICAgLy8gICBuZXh0KCkKICAvLyAgICAgLy8gfQogIC8vICAgfQogIC8vIH0gZWxzZSB7CiAgLy8gICAvLyDmsqHmnIl0b2tlbgogIC8vICAgaWYgKHdoaXRlTGlzdC5pbmRleE9mKHRvLnBhdGgpICE9PSAtMSkgewogIC8vICAgICAvLyDlnKjlhY3nmbvlvZXnmb3lkI3ljZXvvIznm7TmjqXov5vlhaUKICAvLyAgICAgbmV4dCgpCiAgLy8gICAgIE5Qcm9ncmVzcy5kb25lKCkKICAvLyAgIH0gZWxzZSBpZiAodG8ucGF0aCA9PT0gYC9sb2dpbmApIHsKICAvLyAgICAgc3RvcmUuZGlzcGF0Y2goJ0xvZ2luJywgdG8pLnRoZW4ocmVzID0+IHsKICAvLyAgICAgICBuZXh0KGAvYCkKICAvLyAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpCiAgLy8gICAgIH0pCiAgLy8gICB9IGVsc2UgewogIC8vICAgICAvLyDlkKbliJnlhajpg6jph43lrprlkJHliLDnmbvlvZXpobUKICAvLyAgICAgbmV4dChgL2xvZ2luYCkKICAvLyAgICAgTlByb2dyZXNzLmRvbmUoKQogIC8vICAgfQogIC8vIH0KfSk7Cgpfcm91dGVyLmRlZmF1bHQuYWZ0ZXJFYWNoKGZ1bmN0aW9uICgpIHsKICBfbnByb2dyZXNzLmRlZmF1bHQuZG9uZSgpOwp9KTs="},{"version":3,"sources":["/Users/caichaosen/Code/web/hrm-ui2/src/permission.js"],"names":["NProgress","configure","showSpinner","whiteList","router","beforeEach","to","from","next","start","afterEach","done"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEAA,mBAAUC,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB;;AAEA,IAAMC,SAAS,GAAG,EAAlB;;AAEAC,gBAAOC,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpCR,qBAAUS,KAAV;;AACAD,EAAAA,IAAI;AACJ,SAHoC,CAIpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAnED;;AAqEAJ,gBAAOM,SAAP,CAAiB,YAAM;AACrBV,qBAAUW,IAAV;AACD,CAFD","sourcesContent":["import router from './router'\nimport store from './store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\nimport { getToken } from '@/utils/auth'\n\nNProgress.configure({ showSpinner: false })\n\nconst whiteList = []\n\nrouter.beforeEach((to, from, next) => {\n  NProgress.start()\n  next()\n  return\n  // if (getToken()) {\n  //   debugger\n  //   /* has token*/\n  //   if (to.path === '/login') {\n  //     next({ path: '/' })\n  //     NProgress.done()\n  //   } else {\n  //     // 有token就有了用户信息\n  //     // 1.判断有无路由信息，没有的话，拉取路由数据，拉取失败直接登出\n  //     store.dispatch('GenerateRoutes').then(accessRoutes => {\n  //       debugger\n  //       console.log('a', accessRoutes)\n  //       // router.addRoutes(accessRoutes) // 动态添加可访问路由表\n  //       next({ ...to, replace: true }) // hack方法 确保addRoutes已完成\n  //     }).catch(e => {\n  //       store.dispatch('LogOut').then(() => {\n  //         Message.error(e)\n  //         next({ path: '/' })\n  //         // TODO: 这里还需要处理\n\n  //         // store.dispatch('Login', to).then(res => {\n  //         //   next(`/`)\n  //         //   NProgress.done()\n  //         // })\n  //       })\n  //     })\n  //     // if (store.getters.roles.length === 0) {\n  //     //   // 判断当前用户是否已拉取完user_info信息\n  //     //   store.dispatch('GetInfo').then(res => {\n  //     //     // 拉取user_info\n  //     //     const roles = res.roles\n  //     //     store.dispatch('GenerateRoutes', { roles }).then(accessRoutes => {\n  //     //       // 根据roles权限生成可访问的路由表\n  //     //       router.addRoutes(accessRoutes) // 动态添加可访问路由表\n  //     //       next({ ...to, replace: true }) // hack方法 确保addRoutes已完成\n  //     //     })\n  //     //   }).catch(err => {\n  //     //     store.dispatch('LogOut').then(() => {\n  //     //       Message.error(err)\n  //     //       next({ path: '/' })\n  //     //     })\n  //     //   })\n  //     // } else {\n  //     //   next()\n  //     // }\n  //   }\n  // } else {\n  //   // 没有token\n  //   if (whiteList.indexOf(to.path) !== -1) {\n  //     // 在免登录白名单，直接进入\n  //     next()\n  //     NProgress.done()\n  //   } else if (to.path === `/login`) {\n  //     store.dispatch('Login', to).then(res => {\n  //       next(`/`)\n  //       NProgress.done()\n  //     })\n  //   } else {\n  //     // 否则全部重定向到登录页\n  //     next(`/login`)\n  //     NProgress.done()\n  //   }\n  // }\n})\n\nrouter.afterEach(() => {\n  NProgress.done()\n})\n"]}]}